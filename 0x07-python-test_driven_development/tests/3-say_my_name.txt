===========================
How to Use 3-say_my_name.py
===========================

This module defines a function ``say_my_name(first_name, last_name="")``

Usage
=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

	>>> say_my_name = __import__('3-say_my_name').say_my_name
	>>> say_my_name("Justine", "Omwandho")
	My name is Justine Omwandho

::

	>>> say_my_name("Lilian", "Akumu")
	My name is Lilian Akumu

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

	>>> say_my_name("Justine")
	My name is Justine

Invalid Names
=============

The parameters ```first_name``` and ```last_name``` must be strings. Otherwise,
a TypeError is raised.

::

	>>> say_my_name(7, "Atieno")
	Traceback (most recent call last):
	TypeError: first_name must be a string

::

	>>> say_my_name("Nicky", ["student", "actor"])
	Traceback (most recent call last):
	TypeError: last_name must be a string

::
	>>> say_my_name(None)
	Traceback (most recent call last):
	TypeError: first_name must be a string

At least one name must be provided

::

	>>> say_my_name()
	Traceback (most recent call last):
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'
